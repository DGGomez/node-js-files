{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API stuff",
    "description": "Stuff API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/create/{Id}": {
      "post": {
        "description": "Create new item",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "description": "Create an item",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "summary": "Get all items in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/read/{Id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of item that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "summary": "Get item with given ID",
        "responses": {
          "200": {
            "description": "Item is found",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete item with given ID",
        "responses": {
          "200": {
            "description": "Item is deleted",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        }
      },
      "put": {
        "summary": "Update Item with give ID",
        "parameters": [
          {
            "name": "item",
            "in": "body",
            "description": "Item with new values of properties",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item is updated",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Item": {
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "Created_date": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Items": {
      "type": "array",
      "$ref": "#/definitions/Item"
    }
  }
}
